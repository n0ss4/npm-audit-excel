#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Commit message hook
echo "üìù Validating commit message..."

# Read the commit message
commit_regex='^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: .{1,50}'

if ! grep -qE "$commit_regex" "$1"; then
    echo "‚ùå Invalid commit message format!"
    echo ""
    echo "The commit message must follow the Conventional Commits format:"
    echo "  <type>[optional scope]: <description>"
    echo ""
    echo "Types:"
    echo "  feat:     A new feature"
    echo "  fix:      A bug fix"
    echo "  docs:     Documentation only changes"
    echo "  style:    Changes that do not affect the meaning of the code"
    echo "  refactor: A code change that neither fixes a bug nor adds a feature"
    echo "  test:     Adding missing tests or correcting existing tests"
    echo "  chore:    Changes to the build process or auxiliary tools"
    echo "  perf:     A code change that improves performance"
    echo "  ci:       Changes to CI configuration files and scripts"
    echo "  build:    Changes that affect the build system or dependencies"
    echo "  revert:   Reverts a previous commit"
    echo ""
    echo "Examples:"
    echo "  feat: add configuration presets"
    echo "  fix(cli): resolve column parsing issue"
    echo "  docs: update README with new examples"
    echo "  refactor(config): extract constants to separate file"
    echo ""
    exit 1
fi

echo "‚úÖ Commit message format is valid!"
